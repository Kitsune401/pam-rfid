            """        
            ## Packet completely received
            #if ( index == 14 ):



                ## Gets received packet checksum
                receivedChecksum = hex(receivedPacketData[11] + receivedPacketData[12]) 
                print receivedChecksum
                
                print 'completed!'
            """
                
            """
            ## Reads one byte
            if ( receivedFragment == self.RFID_STARTCODE ):

                tagId = ''
                
                ## Collect RFID data
                for _ in range(12):
                    
                    ## Reads on byte
                    receivedFragment = self.__serial.read()

                    ## Builds tag ID
                    self.__tagId += receivedFragment
                    
                    ## Coverts read string to byte for calculation 
                    #receivedFragment = utilities.stringToByte(receivedFragment)                    

                    ## Collect payload
                    receivedPacketData.append(receivedFragment)                
                    print str(index) +': '+ receivedFragment

                ## Checks for invalid end flag
                if ( self.__serial.read() != self.RFID_ENDCODE ):
                    raise Exception('Invalid packet data!')
 
                print 'ID: '+ self.__tagId
                """
                """
                ## Gets received packet checksum
                receivedChecksum = hex(receivedPacketData[10] + receivedPacketData[11])              

                ## Calculates packet checksum
                for i in range(10):
                    packetChecksum = packetChecksum ^ (((int(receivedPacketData[i], 16)) << 4) + int(receivedPacketData[i+1], 16))

                packetChecksum = hex(packetChecksum)
                print 'checksum: '+ packetChecksum

                ## Check checksum
                if ( packetChecksum != receivedChecksum ):
                    raise Exception('Checksum of packet is wrong!')

                ## Store checksum
                self.__checksum = receivedChecksum
                """
                """
                ## Gets ID of tag
                tagId = ''

                for i in range(2, 10):
                    tagId += packetPayload[i]                

                ## Store ID of tag
                self.__tagId = tagId
            """
